{
  "service": {
    "service": "medical-serverless-backend",
    "serviceObject": {
      "name": "medical-serverless-backend"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "lambdaHashingVersion": "20201221",
      "stage": "prod",
      "region": "us-east-1",
      "environment": {
        "USER_TABLE": "medical-serverless-backend-aws-Users",
        "JWT_SECRET": "jwtSecretTokenMedical"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query",
            "dynamodb:PutItem",
            "dynamodb:DeleteItem",
            "dynamodb:UpdateItem",
            "dynamodb:GetItem"
          ],
          "Resource": {
            "Fn::Sub": "arn:aws:dynamodb:us-east-1:${AWS::AccountId}:table/medical-serverless-backend-aws-Users"
          }
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/medical-serverless-backend-prod-login"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "medical-serverless-backend",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/medical-serverless-backend-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/medical-serverless-backend-prod*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "medical-serverless-backend",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/medical-serverless-backend/prod/1635104181941-2021-10-24T19:36:21.941Z/medical-serverless-backend.zip"
              },
              "Handler": "login.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "medical-serverless-backend-prod-login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Description": "POST/login",
              "Environment": {
                "Variables": {
                  "USER_TABLE": "medical-serverless-backend-aws-Users",
                  "JWT_SECRET": "jwtSecretTokenMedical"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "LoginLambdaVersiongdk5rcO9Cy99yF8Jheo7pd8SjgJcBZbXCNqvqxhdn8A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "Na7oLrE76o3gVwXINMWZwjJKKpEQWSXxrFn1WK/ITCU=",
              "Description": "POST/login"
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "prod-medical-serverless-backend",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodLoginOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Accept,Content-Type,Content-Length,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayMedicalserverlessbackendRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodLoginPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "LoginLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMedicalserverlessbackendRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "medical-serverless-backend-prod | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayMethodLoginPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Schema": {
                "definitions": {},
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "title": "login Validation",
                "required": [
                  "user_name",
                  "password"
                ],
                "properties": {
                  "user_name": {
                    "type": "string",
                    "title": "userName schema",
                    "pattern": "^[a-zA-Z0-9]+$",
                    "maxLength": 12,
                    "minLength": 5
                  },
                  "password": {
                    "type": "string",
                    "title": "password schema"
                  }
                }
              }
            }
          },
          "ApiGatewayDeployment1635104169433": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "prod"
            },
            "DependsOn": [
              "ApiGatewayMethodLoginOptions",
              "ApiGatewayMethodLoginPost"
            ]
          },
          "LoginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "TableName": "medical-serverless-backend-aws-Users",
              "AttributeDefinitions": [
                {
                  "AttributeName": "user_name",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "timestamp",
                  "AttributeType": "N"
                },
                {
                  "AttributeName": "expires",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "user_name",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "LocalSecondaryIndexes": [
                {
                  "IndexName": "lsi_user",
                  "KeySchema": [
                    {
                      "AttributeName": "user_name",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "expires",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-medical-serverless-backend-prod-ServerlessDeploymentBucketName"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersiongdk5rcO9Cy99yF8Jheo7pd8SjgJcBZbXCNqvqxhdn8A"
            },
            "Export": {
              "Name": "sls-medical-serverless-backend-prod-LoginLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/prod"
                ]
              ]
            },
            "Export": {
              "Name": "sls-medical-serverless-backend-prod-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "secrets": {
        "jwtSecret": "jwtSecretTokenMedical"
      },
      "stage": "prod",
      "allowedHeaders": [
        "Accept",
        "Content-Type",
        "Content-Length",
        "Authorization",
        "X-Amz-Date",
        "X-Api-Key",
        "X-Amz-Security-Token",
        "X-Amz-User-Agent"
      ]
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "login": {
        "handler": "login.handler",
        "description": "POST/login",
        "events": [
          {
            "http": {
              "path": "login",
              "method": "post",
              "request": {
                "schema": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodLoginPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Accept",
                  "Content-Type",
                  "Content-Length",
                  "Authorization",
                  "X-Amz-Date",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "medical-serverless-backend-prod-login",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "LoginLambdaVersiongdk5rcO9Cy99yF8Jheo7pd8SjgJcBZbXCNqvqxhdn8A"
      }
    },
    "resources": {
      "Resources": {
        "UserTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "TableName": "medical-serverless-backend-aws-Users",
            "AttributeDefinitions": [
              {
                "AttributeName": "user_name",
                "AttributeType": "S"
              },
              {
                "AttributeName": "timestamp",
                "AttributeType": "N"
              },
              {
                "AttributeName": "expires",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "user_name",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "timestamp",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "LocalSecondaryIndexes": [
              {
                "IndexName": "lsi_user",
                "KeySchema": [
                  {
                    "AttributeName": "user_name",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "expires",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/an-19/Documents/gitFree/medical-backend/medical-serverless-backend/.serverless/medical-serverless-backend.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/medical-serverless-backend/prod/1635104181941-2021-10-24T19:36:21.941Z",
    "artifact": "medical-serverless-backend.zip"
  }
}